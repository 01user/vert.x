The node.x team is very pleased to announce the release of node.x 0.1

This is the very first binary release of the node.x project. We intend to follow the "release early, release often" mantra, and hope to get binary releases out approximately every eight weeks from now on.

There is still much to do in node.x but this first release provides the following functionality:

* TCP clients and servers
* SSL clients and servers
* HTTP 1.1 clients and servers. Pooling HTTP client. Sendfile support for high performance serving of static files.
* Websockets - hixie-76 version http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76 This one works with Google Chrome version 6 or later. Other versions of the websocket spec will be supported as they get better browser support.
* Buffers - for easy manipulation and passing of data between modules
* File system module - for manipulating/reading/writing data to/from files.
* Concurrency model. All code is always executed by the same event loop. Messages can be passed between event loops in a concurrency-safe way
* Shared data. For sharing data safely between event loops.
* Parse tools. Helper class for parsing protocols.
* STDIO. Asynchronous STDIO.
* Streams. Streams allows a consistent way of reading and writing data between different node.x modules (e.g. HTTP and file system). It contains built in flow control using a Pump to prevent writing too fast to a slow data sink.
* Composition. This allows Deferred actions (i.e. actions that haven't yet been executed) to be composed together into 
parallel or serial asychronous control flows. This will be added to in subsequent releases.
* Timers. Set one-shot or periodic timers to fire and execute code.
* Blocking tasks. Wrap legacy blocking tasks in an async API in an event-loop safe way.
* Redis client. A fully async Redis client.

All of the above functionality is provided via both a Java and a Ruby API

Please see the file README.md for more information on what node.x is, how to install it, and how to run the examples.

Enjoy! This is just the beginning :)
