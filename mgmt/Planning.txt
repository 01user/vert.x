Node.x planning/ideas/TODO
==========================

Modules
=========

Core modules
============

Net
UDP
DNS
STDIO
Buffer
Composition
Shared data
Node (including Timers, registering handlers)
FileSystem
ParseTools
Http

Add on modules
==============
AMQP
Redis
STOMP
SMTP
JDBC
Memcached
Spawn
REST
Twitter
FB
Google+
Supervisors
Remote Actors
Socket-IO
Web framework
JNDI
JMS
SCTP
PGM
ZeroMQ
Gemfire

Supported Languages
===================

Java
JRuby                                                        7
Clojure
Groovy
Groovy++
JavaScript
Jython
Scala


TODO
====
1) Consider wrapping libev in Java API
2) Consider using disruptor https://code.google.com/p/disruptor/ as alternative to concurrent queues
3) SSL exceptions aren't very nice
4) StartTLS
5) endHandler handlers not currently being called - check this
6) Websocket close protocol
7) Synchronous versions of filesystem ops
8) Filesystem lock + watch
9) Javadoc
10) Ruby doc
11) Methods to extract path from http uri
12) Netty needs to implement event loop
13) HTTP server side 100-continue handling
14) Allow to set HTTP response reason
15) Netty should build timers into event loop
16) More tests needed!
17) Ruby HTTP header handling needs to be improved - can we just use a hash for headers? we can combine duplicate
headers
18) Scala delimited continuations for making async code appear synchronous
19) Make Java nodex methods static








