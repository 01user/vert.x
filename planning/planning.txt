Node.x planning
===============

Breakdown
=========

Core modules
============

Net
---

This implements TCP, SSL

UDP
---

Implements UDP unicast/multicast

DNS
---

Interface to DNS

STDIO
-----

Async console IO

Buffer
------

Wrap Netty buffers

Also implement pipe functionality to pipe one stream to another

Composition
-----------

Allow async actions to be composed together

Concurrent
----------

Provide set of scalable non blocking data structures. Wrap Cliff Click's classes.

File
----

File IO

Including file meta operations.

Native layer for AIO

ParseTools
----------

Utilities for parsing data, makes it easier to implement protocols.

Http
----

Full HTTP implementation, including HTTPS

Timers
------

Timer functionality for executing stuff periodically or at time in the future

Queue
-----

Simple in memory queue that acts as stream and can be piped

SCTP??
------

This is supported in Java 7

PGM??
-----

Pragmatic general multicast




Other modules
=============

AMQP
----

AMQP 0.9.1 client implementation

Redis
-----

Redis client implementation

Stomp
-----

Stomp 1.0 / 1.1 client and server implementation

Akka
----

Wrap node.x API with Akka actors. Actors process events.

Memcached??
-----------

SMTP????
--------

JDBC
----

Wrap JDBC in async interface

Spawn??
-------

Spawn processes and pipe their output/input like any other stream


Runtime
=======

Target Java 7, since we want InvokeDynamic and a few other things (e.g. file watching)

Supported Languages
===================

Java
JRuby
Groovy

Going ahead:

Jython
Rhino
Scala
Clojure

Other things to look at
=======================

Consider wrapping libevent in Java API



